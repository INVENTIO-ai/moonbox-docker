name: create-docker
description: build and push a docker image
inputs:
  imagename:
    description: docker image to push
    required: true
  additionaltag:
    description: prefix tag before `tagversion` or 'latest'
    required: false
  tagversion:
    description: last part of tag, defaults to first 8 chars of github.sha
    required: true
    default: ''
  path:
    description: path to build context
    required: true
  dockerfile:
    description: path to Dockerfile
    required: true
  baseimage:
    description: base image build argument
    required: true
  additional_buildargs:
    description: new-line separated build-args
    required: false
  imagesuffix:
    description: suffix to append to pushed images
    required: false
    default: '-dev'
runs:
  using: "composite"
  steps:
    - name: determine version
      run: |
        version=${{ inputs.tagversion }}
        version=${version:-$(git rev-parse --short=8 HEAD)}
        echo "::set-output name=version::"$version
      shell: bash
      id: tag
    - name: concat tags
      run: |
        append() {
        # latest or hash
        ver=$1
        # additional prefix
        tag=${{ inputs.additionaltag }}
        [ $tag ] && echo "$tag"-"$ver" || echo "$ver"
        }

        ver_tag=$(append ${{ steps.tag.outputs.version }})
        latest_tag=$(append "latest")

        img=${{ inputs.imagename }}${{ inputs.imagesuffix}}
        tags="-t $img:$ver_tag -t $img:$latest_tag"
        echo "::set-output name=all::$tags"
      shell: bash
      id: tags
    - run: echo tags ${{ steps.tags.outputs.all }}
      shell: bash

    - name: concat buildargs
      run: |
        list="baseimage=${{ inputs.baseimage }}
        ${{ inputs.additional_buildargs }}"

        for item in ${list//\\n/
        }
        do
           args=$args"--build-arg $item "
        done
        echo "dbg concat: $args"
        echo "::set-output name=build::$args"
      shell: bash
      id: args
    - run: echo buildargs "${{ steps.args.outputs.build }}"
      shell: bash

    - run: echo path ${{ inputs.path }}
      shell: bash
    - run: echo dockerfile ${{ inputs.dockerfile }}
      shell: bash
    - run: echo baseimage ${{ inputs.baseimage }}
      shell: bash
    - run: echo imagename ${{ inputs.imagename }}
      shell: bash
    - name: docker login
      # stores credentials unencrypted as of writing, `pass` encryption
      # coming soon to ubuntu-latest runner
      # https://github.com/actions/virtual-environments/issues/2302
      run: echo ${{ env.DOCKER_TOKEN }} | docker login -u ${{ env.DOCKER_USER }} --password-stdin
      shell: bash

    - name: docker logout
      # unfortunately post: nor runs.steps.if is supported in composite action
      # https://github.community/t/no-post-run-capability-for-composite-actions/139046/4
      run: docker logout
      shell: bash